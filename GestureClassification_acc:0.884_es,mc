{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled70.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPXuO3ZqcHpep5byREh0acF",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mingun0112/2021Gyeongsothon/blob/main/GestureClassification_acc%3A0.884_es%2Cmc\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3pvV8f-JxAfM",
        "outputId": "54a1ee2b-b805-45de-9ca7-10ae4de4ea86"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip /content/drive/MyDrive/hand_gesture_data.zip"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yeQUmzBL4Nwf",
        "outputId": "32fc2c00-de7f-4882-d773-5a9a59e473ac"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  /content/drive/MyDrive/hand_gesture_data.zip\n",
            "  inflating: sample_submission.csv   \n",
            "  inflating: test.csv                \n",
            "  inflating: train.csv               \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "jVn-43-R4No1"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "from tensorflow.keras.layers import *\n",
        "from tensorflow.keras.models import *\n",
        "from tensorflow.keras.optimizers import *\n",
        "from tensorflow.keras.callbacks import *"
      ],
      "metadata": {
        "id": "4wMKuD6n37p3"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train = pd.read_csv('train.csv')\n",
        "test = pd.read_csv('test.csv')\n",
        "submission = pd.read_csv('sample_submission.csv')"
      ],
      "metadata": {
        "id": "2f2_dkNz4uKL"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gr_mu = train.groupby('target').mean().iloc[:, 1 :]\n",
        "gr_mu"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "8zYb3XiG44ou",
        "outputId": "0b55d9a8-01a7-42af-fb10-11ee24bcad82"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        sensor_1  sensor_2  sensor_3  sensor_4  sensor_5  sensor_6  sensor_7  \\\n",
              "target                                                                         \n",
              "0      -0.425433 -0.922978  1.389976  0.559473 -0.694207  0.015784  0.793226   \n",
              "1      -0.692796 -0.776260 -1.040046 -0.796645 -0.716867 -0.864049  0.217547   \n",
              "2      -2.346430 -0.822219  1.015480  0.079543  0.805130 -0.322211 -1.559588   \n",
              "3      -0.983485 -1.559744 -3.951593 -0.422654 -0.727304 -0.518749  3.218229   \n",
              "\n",
              "        sensor_8  sensor_9  sensor_10  ...  sensor_23  sensor_24  sensor_25  \\\n",
              "target                                 ...                                    \n",
              "0      -0.913523 -0.561867  -0.802052  ...   0.022476  -0.056393  -1.587852   \n",
              "1      -0.588134 -0.795507  -0.470282  ...  -0.727154  -0.841780  -0.605011   \n",
              "2      -1.354339 -1.188115  -1.084991  ...   0.926393  -0.561614  -0.598858   \n",
              "3      -0.876624 -0.636275  -0.459929  ...  -0.134662   0.026740  -0.935549   \n",
              "\n",
              "        sensor_26  sensor_27  sensor_28  sensor_29  sensor_30  sensor_31  \\\n",
              "target                                                                     \n",
              "0       -0.420015   0.905688   0.151944  -0.626062  -0.822711  -0.621473   \n",
              "1       -0.622476   0.257340  -0.515845  -0.883002  -0.682358   0.154507   \n",
              "2       -0.591853  -2.619469  -0.660750  -0.706551  -0.714254  -0.997320   \n",
              "3       -0.714854   1.169092  -0.441372  -0.693405  -1.013212  -0.500214   \n",
              "\n",
              "        sensor_32  \n",
              "target             \n",
              "0       -1.962038  \n",
              "1       -0.607232  \n",
              "2       -0.504212  \n",
              "3        0.046207  \n",
              "\n",
              "[4 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-84aeff28-dc60-4b87-ad80-9c68921ef0dd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>sensor_1</th>\n",
              "      <th>sensor_2</th>\n",
              "      <th>sensor_3</th>\n",
              "      <th>sensor_4</th>\n",
              "      <th>sensor_5</th>\n",
              "      <th>sensor_6</th>\n",
              "      <th>sensor_7</th>\n",
              "      <th>sensor_8</th>\n",
              "      <th>sensor_9</th>\n",
              "      <th>sensor_10</th>\n",
              "      <th>...</th>\n",
              "      <th>sensor_23</th>\n",
              "      <th>sensor_24</th>\n",
              "      <th>sensor_25</th>\n",
              "      <th>sensor_26</th>\n",
              "      <th>sensor_27</th>\n",
              "      <th>sensor_28</th>\n",
              "      <th>sensor_29</th>\n",
              "      <th>sensor_30</th>\n",
              "      <th>sensor_31</th>\n",
              "      <th>sensor_32</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>target</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.425433</td>\n",
              "      <td>-0.922978</td>\n",
              "      <td>1.389976</td>\n",
              "      <td>0.559473</td>\n",
              "      <td>-0.694207</td>\n",
              "      <td>0.015784</td>\n",
              "      <td>0.793226</td>\n",
              "      <td>-0.913523</td>\n",
              "      <td>-0.561867</td>\n",
              "      <td>-0.802052</td>\n",
              "      <td>...</td>\n",
              "      <td>0.022476</td>\n",
              "      <td>-0.056393</td>\n",
              "      <td>-1.587852</td>\n",
              "      <td>-0.420015</td>\n",
              "      <td>0.905688</td>\n",
              "      <td>0.151944</td>\n",
              "      <td>-0.626062</td>\n",
              "      <td>-0.822711</td>\n",
              "      <td>-0.621473</td>\n",
              "      <td>-1.962038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.692796</td>\n",
              "      <td>-0.776260</td>\n",
              "      <td>-1.040046</td>\n",
              "      <td>-0.796645</td>\n",
              "      <td>-0.716867</td>\n",
              "      <td>-0.864049</td>\n",
              "      <td>0.217547</td>\n",
              "      <td>-0.588134</td>\n",
              "      <td>-0.795507</td>\n",
              "      <td>-0.470282</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.727154</td>\n",
              "      <td>-0.841780</td>\n",
              "      <td>-0.605011</td>\n",
              "      <td>-0.622476</td>\n",
              "      <td>0.257340</td>\n",
              "      <td>-0.515845</td>\n",
              "      <td>-0.883002</td>\n",
              "      <td>-0.682358</td>\n",
              "      <td>0.154507</td>\n",
              "      <td>-0.607232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-2.346430</td>\n",
              "      <td>-0.822219</td>\n",
              "      <td>1.015480</td>\n",
              "      <td>0.079543</td>\n",
              "      <td>0.805130</td>\n",
              "      <td>-0.322211</td>\n",
              "      <td>-1.559588</td>\n",
              "      <td>-1.354339</td>\n",
              "      <td>-1.188115</td>\n",
              "      <td>-1.084991</td>\n",
              "      <td>...</td>\n",
              "      <td>0.926393</td>\n",
              "      <td>-0.561614</td>\n",
              "      <td>-0.598858</td>\n",
              "      <td>-0.591853</td>\n",
              "      <td>-2.619469</td>\n",
              "      <td>-0.660750</td>\n",
              "      <td>-0.706551</td>\n",
              "      <td>-0.714254</td>\n",
              "      <td>-0.997320</td>\n",
              "      <td>-0.504212</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-0.983485</td>\n",
              "      <td>-1.559744</td>\n",
              "      <td>-3.951593</td>\n",
              "      <td>-0.422654</td>\n",
              "      <td>-0.727304</td>\n",
              "      <td>-0.518749</td>\n",
              "      <td>3.218229</td>\n",
              "      <td>-0.876624</td>\n",
              "      <td>-0.636275</td>\n",
              "      <td>-0.459929</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.134662</td>\n",
              "      <td>0.026740</td>\n",
              "      <td>-0.935549</td>\n",
              "      <td>-0.714854</td>\n",
              "      <td>1.169092</td>\n",
              "      <td>-0.441372</td>\n",
              "      <td>-0.693405</td>\n",
              "      <td>-1.013212</td>\n",
              "      <td>-0.500214</td>\n",
              "      <td>0.046207</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4 rows × 32 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84aeff28-dc60-4b87-ad80-9c68921ef0dd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-84aeff28-dc60-4b87-ad80-9c68921ef0dd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-84aeff28-dc60-4b87-ad80-9c68921ef0dd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f, a = plt.subplots(1, 4, figsize = (12, 6))\n",
        "for i in range(4) :\n",
        "    a[i].set_title(f'target {i} Image')\n",
        "    a[i].imshow(np.array(gr_mu.iloc[i]).reshape(8, 4))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        },
        "id": "h6qcu7LP5QO3",
        "outputId": "2389b74f-0cd1-4abd-8157-967ba41d1ba4"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 4 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = train.iloc[:, 1:-1]\n",
        "target = test.iloc[:, 1:]"
      ],
      "metadata": {
        "id": "Yk9kE-us5ckW"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = np.array(X).reshape(-1, 8, 4, 1)\n",
        "target = np.array(target).reshape(-1, 8, 4, 1)"
      ],
      "metadata": {
        "id": "0I_eX5brJidO"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ohe = OneHotEncoder(sparse = False)\n",
        "y = ohe.fit_transform(train[['target']])\n",
        "skf = StratifiedKFold(n_splits = 10, random_state = 42, shuffle = True)\n",
        "skf = StratifiedKFold(n_splits = 10, random_state = 42, shuffle = True)\n",
        "\n",
        "es = EarlyStopping(monitor = 'loss', patience = 20, mode = 'min', verbose = 0)\n",
        "\n"
      ],
      "metadata": {
        "id": "mpqnJHV3JlID"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cnn = Sequential()\n",
        "cnn.add(Conv2D(8, (2, 2), padding = \"same\", activation = 'relu', input_shape = (8, 4, 1)))\n",
        "#cnn.add(MaxPooling2D(2, 2))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(Conv2D(16, (2, 2), padding = \"same\", activation = 'relu'))\n",
        "    \n",
        "    #cnn.add(MaxPooling2D(2, 2))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(Conv2D(32, (3, 3), padding = \"same\", activation = 'relu'))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(Conv2D(32, (3, 3), padding = \"same\", activation = 'relu'))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(GlobalAveragePooling2D())\n",
        "\n",
        "cnn.add(Flatten())\n",
        "cnn.add(Dense(32, activation = 'relu'))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(Dense(16, activation = 'relu'))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(Dense(8, activation = 'relu'))\n",
        "cnn.add(BatchNormalization())\n",
        "cnn.add(Dense(4, activation = 'softmax'))\n",
        "\n",
        "\n",
        "cnn.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PIenAA57WOxB",
        "outputId": "ada603f5-b6b9-4da4-f15e-d9c37a34609c"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " conv2d (Conv2D)             (None, 8, 4, 8)           40        \n",
            "                                                                 \n",
            " batch_normalization (BatchN  (None, 8, 4, 8)          32        \n",
            " ormalization)                                                   \n",
            "                                                                 \n",
            " conv2d_1 (Conv2D)           (None, 8, 4, 16)          528       \n",
            "                                                                 \n",
            " batch_normalization_1 (Batc  (None, 8, 4, 16)         64        \n",
            " hNormalization)                                                 \n",
            "                                                                 \n",
            " conv2d_2 (Conv2D)           (None, 8, 4, 32)          4640      \n",
            "                                                                 \n",
            " batch_normalization_2 (Batc  (None, 8, 4, 32)         128       \n",
            " hNormalization)                                                 \n",
            "                                                                 \n",
            " conv2d_3 (Conv2D)           (None, 8, 4, 32)          9248      \n",
            "                                                                 \n",
            " batch_normalization_3 (Batc  (None, 8, 4, 32)         128       \n",
            " hNormalization)                                                 \n",
            "                                                                 \n",
            " global_average_pooling2d (G  (None, 32)               0         \n",
            " lobalAveragePooling2D)                                          \n",
            "                                                                 \n",
            " flatten (Flatten)           (None, 32)                0         \n",
            "                                                                 \n",
            " dense (Dense)               (None, 32)                1056      \n",
            "                                                                 \n",
            " batch_normalization_4 (Batc  (None, 32)               128       \n",
            " hNormalization)                                                 \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 16)                528       \n",
            "                                                                 \n",
            " batch_normalization_5 (Batc  (None, 16)               64        \n",
            " hNormalization)                                                 \n",
            "                                                                 \n",
            " dense_2 (Dense)             (None, 8)                 136       \n",
            "                                                                 \n",
            " batch_normalization_6 (Batc  (None, 8)                32        \n",
            " hNormalization)                                                 \n",
            "                                                                 \n",
            " dense_3 (Dense)             (None, 4)                 36        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 16,788\n",
            "Trainable params: 16,500\n",
            "Non-trainable params: 288\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cnn_acc = []\n",
        "cnn_pred = np.zeros((target.shape[0], 4))\n",
        "for i, (tr_idx, val_idx) in enumerate(skf.split(X, train.target)) :\n",
        "    print(f'{i + 10} Fold Training.....')\n",
        "    tr_x, tr_y = X[tr_idx], y[tr_idx]\n",
        "    val_x, val_y = X[val_idx], y[val_idx]\n",
        "    \n",
        " \n",
        "    cnn = Sequential()\n",
        "    cnn.add(Conv2D(8, (2, 2), padding = \"same\", activation = 'relu', input_shape = (8, 4, 1)))\n",
        "    #cnn.add(MaxPooling2D(2, 2))\n",
        "    cnn.add(BatchNormalization())\n",
        "    cnn.add(Conv2D(16, (2, 2), padding = \"same\", activation = 'relu'))\n",
        "    \n",
        "    #cnn.add(MaxPooling2D(2, 2))\n",
        "    cnn.add(BatchNormalization())\n",
        "    cnn.add(Conv2D(32, (3, 3), padding = \"same\", activation = 'relu'))\n",
        "    cnn.add(BatchNormalization())\n",
        "    cnn.add(Conv2D(32, (3, 3), padding = \"same\", activation = 'relu'))\n",
        "    cnn.add(BatchNormalization())\n",
        "    cnn.add(GlobalAveragePooling2D())\n",
        "\n",
        "    cnn.add(Flatten())\n",
        "    #cnn.add(Dense(32, activation = 'relu'))\n",
        "    #cnn.add(Dropout(rate=0.5))\n",
        "    #cnn.add(BatchNormalization())\n",
        "    cnn.add(Dense(16, activation = 'relu'))\n",
        "    #cnn.add(BatchNormalization())\n",
        "    #cnn.add(Dense(8, activation = 'relu'))\n",
        "    #cnn.add(Dropout(rate=0.5))\n",
        "    #cnn.add(BatchNormalization())\n",
        "    cnn.add(Dense(4, activation = 'softmax'))\n",
        "\n",
        "    ### ModelCheckPoint Fold마다 갱신\n",
        "    mc = ModelCheckpoint(f'model_{i + 10}.h5', save_best_only = True, monitor = 'val_acc', mode = 'max', verbose = 0)\n",
        "    \n",
        "    ### 모델 compile\n",
        "    #cnn.compile(optimizer = RMSprop(learning_rate = 0.001), loss = 'categorical_crossentropy', metrics = ['acc'])\n",
        "    #opt = keras.optimizers.Adam(learning_rate=0.01)\n",
        "    cnn.compile(loss='categorical_crossentropy', optimizer=Adam(learning_rate=0.01), metrics = ['acc'])\n",
        "    \n",
        "    cnn.fit(tr_x, tr_y, validation_data = (val_x, val_y), epochs = 100, batch_size = 8, callbacks = [es, mc], verbose = 1)\n",
        "\n",
        "    ### 최고 성능 기록 모델 Load\n",
        "    best = load_model(f'model_{i + 10}.h5')\n",
        "    ### validation predict\n",
        "    val_pred = best.predict(val_x)\n",
        "    ### 확률값 중 최대값을 클래스로 매칭\n",
        "    val_cls = np.argmax(val_pred, axis = 1)\n",
        "    ### Fold별 정확도 산출\n",
        "    fold_cnn_acc = accuracy_score(np.argmax(val_y, axis = 1), val_cls)\n",
        "    cnn_acc.append(fold_cnn_acc)\n",
        "    print(f'{i + 10} Fold ACC of CNN = {fold_cnn_acc}\\n')\n",
        "\n",
        "    ### Fold별 test 데이터에 대한 예측값 생성 및 앙상블\n",
        "    fold_pred = best.predict(target) / skf.n_splits\n",
        "    cnn_pred += fold_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "PeZRxE_3Jvj_",
        "outputId": "8f73f968-1808-443f-ad6a-f83af419b493"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 3s 6ms/step - loss: 0.7705 - acc: 0.7049 - val_loss: 0.7764 - val_acc: 0.7436\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5532 - acc: 0.8025 - val_loss: 0.7347 - val_acc: 0.7521\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4906 - acc: 0.8291 - val_loss: 0.4686 - val_acc: 0.8504\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4718 - acc: 0.8253 - val_loss: 0.4640 - val_acc: 0.8162\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4569 - acc: 0.8448 - val_loss: 0.5770 - val_acc: 0.7607\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4500 - acc: 0.8372 - val_loss: 0.4671 - val_acc: 0.8248\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4564 - acc: 0.8334 - val_loss: 0.3936 - val_acc: 0.8675\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4235 - acc: 0.8415 - val_loss: 0.4543 - val_acc: 0.8632\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4177 - acc: 0.8486 - val_loss: 0.5223 - val_acc: 0.8333\n",
            "Epoch 10/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4091 - acc: 0.8515 - val_loss: 0.4800 - val_acc: 0.8205\n",
            "Epoch 11/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3939 - acc: 0.8553 - val_loss: 0.4277 - val_acc: 0.8462\n",
            "Epoch 12/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4135 - acc: 0.8539 - val_loss: 0.5088 - val_acc: 0.8077\n",
            "Epoch 13/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3625 - acc: 0.8624 - val_loss: 0.6454 - val_acc: 0.7863\n",
            "Epoch 14/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3684 - acc: 0.8677 - val_loss: 0.3796 - val_acc: 0.8675\n",
            "Epoch 15/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3810 - acc: 0.8601 - val_loss: 0.3956 - val_acc: 0.8675\n",
            "Epoch 16/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3254 - acc: 0.8853 - val_loss: 0.5354 - val_acc: 0.8205\n",
            "Epoch 17/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3248 - acc: 0.8739 - val_loss: 0.3835 - val_acc: 0.8632\n",
            "Epoch 18/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3172 - acc: 0.8858 - val_loss: 0.5927 - val_acc: 0.7821\n",
            "Epoch 19/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2913 - acc: 0.8977 - val_loss: 0.5572 - val_acc: 0.8162\n",
            "Epoch 20/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2938 - acc: 0.8901 - val_loss: 0.4269 - val_acc: 0.8504\n",
            "Epoch 21/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2683 - acc: 0.9010 - val_loss: 0.6590 - val_acc: 0.7735\n",
            "Epoch 22/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2737 - acc: 0.9029 - val_loss: 0.4365 - val_acc: 0.8632\n",
            "Epoch 23/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2686 - acc: 0.9077 - val_loss: 0.4532 - val_acc: 0.8547\n",
            "Epoch 24/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2642 - acc: 0.9005 - val_loss: 0.6359 - val_acc: 0.7991\n",
            "Epoch 25/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2440 - acc: 0.9115 - val_loss: 0.5764 - val_acc: 0.7991\n",
            "Epoch 26/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2299 - acc: 0.9172 - val_loss: 0.5143 - val_acc: 0.8632\n",
            "Epoch 27/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2478 - acc: 0.9091 - val_loss: 0.7272 - val_acc: 0.7949\n",
            "Epoch 28/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2307 - acc: 0.9191 - val_loss: 0.5104 - val_acc: 0.8291\n",
            "Epoch 29/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2396 - acc: 0.9196 - val_loss: 0.5594 - val_acc: 0.8333\n",
            "Epoch 30/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1734 - acc: 0.9343 - val_loss: 0.6222 - val_acc: 0.8120\n",
            "Epoch 31/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2042 - acc: 0.9291 - val_loss: 0.5130 - val_acc: 0.8291\n",
            "Epoch 32/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2123 - acc: 0.9153 - val_loss: 0.5022 - val_acc: 0.8291\n",
            "Epoch 33/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1910 - acc: 0.9353 - val_loss: 0.5707 - val_acc: 0.8248\n",
            "Epoch 34/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1854 - acc: 0.9329 - val_loss: 0.7147 - val_acc: 0.8034\n",
            "Epoch 35/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1847 - acc: 0.9315 - val_loss: 0.6828 - val_acc: 0.8376\n",
            "Epoch 36/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1718 - acc: 0.9348 - val_loss: 0.5652 - val_acc: 0.8291\n",
            "Epoch 37/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1586 - acc: 0.9410 - val_loss: 0.7684 - val_acc: 0.8162\n",
            "Epoch 38/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1621 - acc: 0.9424 - val_loss: 0.6636 - val_acc: 0.8504\n",
            "Epoch 39/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1488 - acc: 0.9429 - val_loss: 0.8553 - val_acc: 0.8291\n",
            "Epoch 40/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1570 - acc: 0.9462 - val_loss: 0.6517 - val_acc: 0.8034\n",
            "Epoch 41/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1592 - acc: 0.9457 - val_loss: 0.6380 - val_acc: 0.8376\n",
            "Epoch 42/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1447 - acc: 0.9467 - val_loss: 0.6743 - val_acc: 0.8333\n",
            "Epoch 43/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1663 - acc: 0.9453 - val_loss: 0.6445 - val_acc: 0.8419\n",
            "Epoch 44/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1534 - acc: 0.9476 - val_loss: 0.7107 - val_acc: 0.8162\n",
            "Epoch 45/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1399 - acc: 0.9481 - val_loss: 0.8125 - val_acc: 0.8248\n",
            "Epoch 46/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1018 - acc: 0.9643 - val_loss: 0.6881 - val_acc: 0.8376\n",
            "Epoch 47/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1105 - acc: 0.9567 - val_loss: 0.9239 - val_acc: 0.8333\n",
            "Epoch 48/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1381 - acc: 0.9524 - val_loss: 0.7552 - val_acc: 0.8205\n",
            "Epoch 49/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1465 - acc: 0.9462 - val_loss: 0.6428 - val_acc: 0.8632\n",
            "Epoch 50/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1326 - acc: 0.9572 - val_loss: 0.6554 - val_acc: 0.8419\n",
            "Epoch 51/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1317 - acc: 0.9572 - val_loss: 0.6856 - val_acc: 0.8248\n",
            "Epoch 52/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1225 - acc: 0.9591 - val_loss: 0.7319 - val_acc: 0.8376\n",
            "Epoch 53/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1014 - acc: 0.9653 - val_loss: 0.6634 - val_acc: 0.8162\n",
            "Epoch 54/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1537 - acc: 0.9429 - val_loss: 0.6451 - val_acc: 0.8547\n",
            "Epoch 55/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1053 - acc: 0.9629 - val_loss: 0.7625 - val_acc: 0.8248\n",
            "Epoch 56/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1429 - acc: 0.9510 - val_loss: 0.7196 - val_acc: 0.8504\n",
            "Epoch 57/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1135 - acc: 0.9614 - val_loss: 0.7539 - val_acc: 0.8419\n",
            "Epoch 58/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1167 - acc: 0.9600 - val_loss: 0.8340 - val_acc: 0.7906\n",
            "Epoch 59/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1000 - acc: 0.9700 - val_loss: 0.6991 - val_acc: 0.8205\n",
            "Epoch 60/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1372 - acc: 0.9534 - val_loss: 0.6990 - val_acc: 0.8248\n",
            "Epoch 61/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1057 - acc: 0.9567 - val_loss: 0.7143 - val_acc: 0.8291\n",
            "Epoch 62/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1047 - acc: 0.9686 - val_loss: 0.6325 - val_acc: 0.8376\n",
            "Epoch 63/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1132 - acc: 0.9595 - val_loss: 0.7211 - val_acc: 0.8291\n",
            "Epoch 64/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1242 - acc: 0.9572 - val_loss: 0.6131 - val_acc: 0.8419\n",
            "Epoch 65/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1188 - acc: 0.9562 - val_loss: 0.7790 - val_acc: 0.8162\n",
            "Epoch 66/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1110 - acc: 0.9567 - val_loss: 0.7618 - val_acc: 0.8034\n",
            "Epoch 67/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1154 - acc: 0.9595 - val_loss: 0.6909 - val_acc: 0.8333\n",
            "Epoch 68/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0997 - acc: 0.9619 - val_loss: 0.6589 - val_acc: 0.8248\n",
            "Epoch 69/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1027 - acc: 0.9657 - val_loss: 0.7109 - val_acc: 0.8547\n",
            "Epoch 70/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1054 - acc: 0.9629 - val_loss: 0.7468 - val_acc: 0.8248\n",
            "Epoch 71/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1104 - acc: 0.9591 - val_loss: 0.9132 - val_acc: 0.8248\n",
            "Epoch 72/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0917 - acc: 0.9714 - val_loss: 0.7085 - val_acc: 0.8162\n",
            "Epoch 73/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0717 - acc: 0.9776 - val_loss: 0.7002 - val_acc: 0.8248\n",
            "Epoch 74/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0913 - acc: 0.9691 - val_loss: 0.7894 - val_acc: 0.8248\n",
            "Epoch 75/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0884 - acc: 0.9691 - val_loss: 0.8790 - val_acc: 0.8291\n",
            "Epoch 76/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0864 - acc: 0.9681 - val_loss: 0.6731 - val_acc: 0.8675\n",
            "Epoch 77/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0999 - acc: 0.9691 - val_loss: 0.7682 - val_acc: 0.8034\n",
            "Epoch 78/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1106 - acc: 0.9605 - val_loss: 1.2215 - val_acc: 0.8205\n",
            "Epoch 79/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0948 - acc: 0.9681 - val_loss: 0.8750 - val_acc: 0.8162\n",
            "Epoch 80/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0914 - acc: 0.9686 - val_loss: 1.1784 - val_acc: 0.7991\n",
            "Epoch 81/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1044 - acc: 0.9653 - val_loss: 0.6332 - val_acc: 0.8376\n",
            "Epoch 82/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0816 - acc: 0.9762 - val_loss: 0.7721 - val_acc: 0.8462\n",
            "Epoch 83/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0660 - acc: 0.9776 - val_loss: 0.6423 - val_acc: 0.8462\n",
            "Epoch 84/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0944 - acc: 0.9672 - val_loss: 0.6741 - val_acc: 0.8504\n",
            "Epoch 85/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1002 - acc: 0.9700 - val_loss: 0.8096 - val_acc: 0.8205\n",
            "Epoch 86/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0784 - acc: 0.9705 - val_loss: 0.7631 - val_acc: 0.8632\n",
            "Epoch 87/100\n",
            "263/263 [==============================] - 2s 8ms/step - loss: 0.0796 - acc: 0.9743 - val_loss: 0.7711 - val_acc: 0.8205\n",
            "Epoch 88/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0697 - acc: 0.9752 - val_loss: 0.8927 - val_acc: 0.8419\n",
            "Epoch 89/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1020 - acc: 0.9714 - val_loss: 0.7182 - val_acc: 0.8547\n",
            "Epoch 90/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0887 - acc: 0.9714 - val_loss: 0.9070 - val_acc: 0.8333\n",
            "Epoch 91/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0571 - acc: 0.9824 - val_loss: 0.7392 - val_acc: 0.8462\n",
            "Epoch 92/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0759 - acc: 0.9762 - val_loss: 0.9586 - val_acc: 0.8077\n",
            "Epoch 93/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0638 - acc: 0.9757 - val_loss: 1.0826 - val_acc: 0.7863\n",
            "Epoch 94/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0910 - acc: 0.9695 - val_loss: 0.8958 - val_acc: 0.8077\n",
            "Epoch 95/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0852 - acc: 0.9700 - val_loss: 0.9468 - val_acc: 0.8376\n",
            "Epoch 96/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0792 - acc: 0.9752 - val_loss: 0.7616 - val_acc: 0.8419\n",
            "Epoch 97/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1035 - acc: 0.9681 - val_loss: 0.8305 - val_acc: 0.8248\n",
            "Epoch 98/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0911 - acc: 0.9705 - val_loss: 0.7763 - val_acc: 0.8120\n",
            "Epoch 99/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0923 - acc: 0.9681 - val_loss: 0.6980 - val_acc: 0.8504\n",
            "Epoch 100/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0769 - acc: 0.9738 - val_loss: 0.7910 - val_acc: 0.8120\n",
            "30 Fold ACC of CNN = 0.8675213675213675\n",
            "\n",
            "11 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.7788 - acc: 0.6949 - val_loss: 1.2327 - val_acc: 0.6453\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5751 - acc: 0.7863 - val_loss: 0.8574 - val_acc: 0.7009\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5218 - acc: 0.8120 - val_loss: 0.4466 - val_acc: 0.8462\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5291 - acc: 0.7991 - val_loss: 0.6504 - val_acc: 0.8034\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4362 - acc: 0.8515 - val_loss: 0.5818 - val_acc: 0.7821\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4531 - acc: 0.8448 - val_loss: 0.5428 - val_acc: 0.8291\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4326 - acc: 0.8320 - val_loss: 0.4495 - val_acc: 0.8333\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4292 - acc: 0.8444 - val_loss: 0.6824 - val_acc: 0.7479\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3911 - acc: 0.8553 - val_loss: 0.5206 - val_acc: 0.8376\n",
            "Epoch 10/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3771 - acc: 0.8615 - val_loss: 0.5209 - val_acc: 0.8034\n",
            "Epoch 11/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3893 - acc: 0.8558 - val_loss: 0.5310 - val_acc: 0.8291\n",
            "Epoch 12/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3639 - acc: 0.8629 - val_loss: 0.5090 - val_acc: 0.8291\n",
            "Epoch 13/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3551 - acc: 0.8691 - val_loss: 0.6158 - val_acc: 0.8077\n",
            "Epoch 14/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3255 - acc: 0.8858 - val_loss: 0.5896 - val_acc: 0.8419\n",
            "Epoch 15/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3509 - acc: 0.8696 - val_loss: 0.6671 - val_acc: 0.7949\n",
            "Epoch 16/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3237 - acc: 0.8782 - val_loss: 0.5571 - val_acc: 0.8291\n",
            "Epoch 17/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3164 - acc: 0.8839 - val_loss: 0.5167 - val_acc: 0.8590\n",
            "Epoch 18/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3371 - acc: 0.8762 - val_loss: 0.5776 - val_acc: 0.8248\n",
            "Epoch 19/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3090 - acc: 0.8848 - val_loss: 0.5903 - val_acc: 0.8205\n",
            "Epoch 20/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3131 - acc: 0.8867 - val_loss: 0.5242 - val_acc: 0.8034\n",
            "Epoch 21/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2721 - acc: 0.8958 - val_loss: 0.5503 - val_acc: 0.8504\n",
            "Epoch 22/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2812 - acc: 0.8991 - val_loss: 0.5136 - val_acc: 0.8291\n",
            "Epoch 23/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2673 - acc: 0.8991 - val_loss: 0.5078 - val_acc: 0.8376\n",
            "Epoch 24/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2566 - acc: 0.9034 - val_loss: 0.6876 - val_acc: 0.8034\n",
            "Epoch 25/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2680 - acc: 0.9034 - val_loss: 0.5406 - val_acc: 0.8419\n",
            "Epoch 26/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2436 - acc: 0.9134 - val_loss: 0.6088 - val_acc: 0.8504\n",
            "Epoch 27/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2498 - acc: 0.9096 - val_loss: 0.7207 - val_acc: 0.8120\n",
            "Epoch 28/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2496 - acc: 0.9015 - val_loss: 0.6299 - val_acc: 0.8333\n",
            "Epoch 29/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2094 - acc: 0.9219 - val_loss: 0.9009 - val_acc: 0.8077\n",
            "Epoch 30/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2099 - acc: 0.9257 - val_loss: 0.5487 - val_acc: 0.8419\n",
            "Epoch 31/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2222 - acc: 0.9224 - val_loss: 0.7933 - val_acc: 0.7735\n",
            "Epoch 32/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2041 - acc: 0.9286 - val_loss: 0.7027 - val_acc: 0.8120\n",
            "Epoch 33/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2123 - acc: 0.9181 - val_loss: 0.7125 - val_acc: 0.8419\n",
            "Epoch 34/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1953 - acc: 0.9286 - val_loss: 0.7480 - val_acc: 0.8333\n",
            "Epoch 35/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1537 - acc: 0.9457 - val_loss: 0.6881 - val_acc: 0.8462\n",
            "Epoch 36/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1852 - acc: 0.9315 - val_loss: 0.7680 - val_acc: 0.8376\n",
            "Epoch 37/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1903 - acc: 0.9300 - val_loss: 0.9380 - val_acc: 0.7650\n",
            "Epoch 38/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1684 - acc: 0.9396 - val_loss: 0.7836 - val_acc: 0.8547\n",
            "Epoch 39/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1608 - acc: 0.9391 - val_loss: 0.7075 - val_acc: 0.8462\n",
            "Epoch 40/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1793 - acc: 0.9367 - val_loss: 0.9394 - val_acc: 0.7949\n",
            "Epoch 41/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1546 - acc: 0.9472 - val_loss: 0.8017 - val_acc: 0.8248\n",
            "Epoch 42/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1639 - acc: 0.9438 - val_loss: 0.9579 - val_acc: 0.8077\n",
            "Epoch 43/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1272 - acc: 0.9538 - val_loss: 0.8602 - val_acc: 0.8205\n",
            "Epoch 44/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1706 - acc: 0.9343 - val_loss: 1.0135 - val_acc: 0.8248\n",
            "Epoch 45/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1561 - acc: 0.9448 - val_loss: 0.6252 - val_acc: 0.8547\n",
            "Epoch 46/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1081 - acc: 0.9614 - val_loss: 0.7774 - val_acc: 0.8504\n",
            "Epoch 47/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1566 - acc: 0.9453 - val_loss: 0.8583 - val_acc: 0.8120\n",
            "Epoch 48/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1220 - acc: 0.9567 - val_loss: 0.9082 - val_acc: 0.8120\n",
            "Epoch 49/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1682 - acc: 0.9376 - val_loss: 0.7254 - val_acc: 0.8462\n",
            "Epoch 50/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1080 - acc: 0.9610 - val_loss: 0.8745 - val_acc: 0.8077\n",
            "Epoch 51/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1610 - acc: 0.9457 - val_loss: 1.0145 - val_acc: 0.8162\n",
            "Epoch 52/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1101 - acc: 0.9610 - val_loss: 0.7631 - val_acc: 0.8248\n",
            "Epoch 53/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1154 - acc: 0.9591 - val_loss: 0.7390 - val_acc: 0.8248\n",
            "Epoch 54/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1252 - acc: 0.9629 - val_loss: 0.8951 - val_acc: 0.8376\n",
            "Epoch 55/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1321 - acc: 0.9557 - val_loss: 1.0163 - val_acc: 0.8077\n",
            "Epoch 56/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1098 - acc: 0.9629 - val_loss: 0.8224 - val_acc: 0.8291\n",
            "Epoch 57/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1316 - acc: 0.9557 - val_loss: 0.8990 - val_acc: 0.8376\n",
            "Epoch 58/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1191 - acc: 0.9581 - val_loss: 0.9697 - val_acc: 0.8162\n",
            "Epoch 59/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1224 - acc: 0.9648 - val_loss: 0.9775 - val_acc: 0.8205\n",
            "Epoch 60/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0956 - acc: 0.9662 - val_loss: 0.9360 - val_acc: 0.8120\n",
            "Epoch 61/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1261 - acc: 0.9576 - val_loss: 1.1455 - val_acc: 0.8120\n",
            "Epoch 62/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1165 - acc: 0.9572 - val_loss: 1.0412 - val_acc: 0.8205\n",
            "Epoch 63/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0992 - acc: 0.9653 - val_loss: 1.1650 - val_acc: 0.8120\n",
            "Epoch 64/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1319 - acc: 0.9600 - val_loss: 1.3149 - val_acc: 0.7778\n",
            "Epoch 65/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0980 - acc: 0.9686 - val_loss: 1.0733 - val_acc: 0.8248\n",
            "Epoch 66/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0975 - acc: 0.9634 - val_loss: 1.0969 - val_acc: 0.8248\n",
            "Epoch 67/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1255 - acc: 0.9600 - val_loss: 1.0487 - val_acc: 0.8162\n",
            "Epoch 68/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1178 - acc: 0.9581 - val_loss: 1.2690 - val_acc: 0.7949\n",
            "Epoch 69/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0879 - acc: 0.9676 - val_loss: 1.1337 - val_acc: 0.7906\n",
            "Epoch 70/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1329 - acc: 0.9591 - val_loss: 0.8731 - val_acc: 0.8291\n",
            "Epoch 71/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1011 - acc: 0.9662 - val_loss: 1.1178 - val_acc: 0.7863\n",
            "Epoch 72/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0809 - acc: 0.9714 - val_loss: 1.0549 - val_acc: 0.8333\n",
            "Epoch 73/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1019 - acc: 0.9657 - val_loss: 1.0142 - val_acc: 0.8376\n",
            "Epoch 74/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0757 - acc: 0.9757 - val_loss: 0.9618 - val_acc: 0.8120\n",
            "Epoch 75/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0835 - acc: 0.9714 - val_loss: 1.2204 - val_acc: 0.8034\n",
            "Epoch 76/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1152 - acc: 0.9610 - val_loss: 0.7956 - val_acc: 0.8333\n",
            "Epoch 77/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0782 - acc: 0.9729 - val_loss: 0.9614 - val_acc: 0.8248\n",
            "Epoch 78/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0760 - acc: 0.9743 - val_loss: 1.0191 - val_acc: 0.8205\n",
            "Epoch 79/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1312 - acc: 0.9515 - val_loss: 1.1105 - val_acc: 0.8162\n",
            "Epoch 80/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1289 - acc: 0.9534 - val_loss: 0.9394 - val_acc: 0.8291\n",
            "Epoch 81/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0758 - acc: 0.9714 - val_loss: 1.2778 - val_acc: 0.7949\n",
            "Epoch 82/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0712 - acc: 0.9757 - val_loss: 1.0654 - val_acc: 0.8162\n",
            "Epoch 83/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0864 - acc: 0.9691 - val_loss: 0.9004 - val_acc: 0.8291\n",
            "Epoch 84/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0829 - acc: 0.9710 - val_loss: 0.9164 - val_acc: 0.8248\n",
            "Epoch 85/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0938 - acc: 0.9733 - val_loss: 1.1803 - val_acc: 0.8077\n",
            "Epoch 86/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0982 - acc: 0.9705 - val_loss: 1.1263 - val_acc: 0.8205\n",
            "Epoch 87/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0908 - acc: 0.9733 - val_loss: 1.1964 - val_acc: 0.8077\n",
            "Epoch 88/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0900 - acc: 0.9681 - val_loss: 0.9604 - val_acc: 0.8419\n",
            "Epoch 89/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0540 - acc: 0.9786 - val_loss: 1.0005 - val_acc: 0.8462\n",
            "Epoch 90/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0450 - acc: 0.9867 - val_loss: 1.1845 - val_acc: 0.8291\n",
            "Epoch 91/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0927 - acc: 0.9733 - val_loss: 1.1205 - val_acc: 0.8205\n",
            "Epoch 92/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1195 - acc: 0.9610 - val_loss: 1.1036 - val_acc: 0.8248\n",
            "Epoch 93/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0656 - acc: 0.9762 - val_loss: 1.4406 - val_acc: 0.8291\n",
            "Epoch 94/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0845 - acc: 0.9695 - val_loss: 1.3616 - val_acc: 0.8077\n",
            "Epoch 95/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0831 - acc: 0.9719 - val_loss: 1.0701 - val_acc: 0.8248\n",
            "Epoch 96/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0874 - acc: 0.9714 - val_loss: 1.3009 - val_acc: 0.8162\n",
            "Epoch 97/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0945 - acc: 0.9686 - val_loss: 1.2425 - val_acc: 0.8034\n",
            "Epoch 98/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0789 - acc: 0.9762 - val_loss: 1.1404 - val_acc: 0.8248\n",
            "Epoch 99/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0743 - acc: 0.9752 - val_loss: 1.0683 - val_acc: 0.8376\n",
            "Epoch 100/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0656 - acc: 0.9781 - val_loss: 1.1179 - val_acc: 0.8205\n",
            "31 Fold ACC of CNN = 0.8589743589743589\n",
            "\n",
            "12 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.7807 - acc: 0.6906 - val_loss: 0.6275 - val_acc: 0.7479\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5629 - acc: 0.8006 - val_loss: 0.3364 - val_acc: 0.8803\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5266 - acc: 0.8101 - val_loss: 0.5244 - val_acc: 0.7949\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5021 - acc: 0.8172 - val_loss: 0.4198 - val_acc: 0.8462\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4830 - acc: 0.8210 - val_loss: 0.3907 - val_acc: 0.8547\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4664 - acc: 0.8334 - val_loss: 0.4502 - val_acc: 0.8248\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4490 - acc: 0.8353 - val_loss: 0.4126 - val_acc: 0.8590\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4217 - acc: 0.8386 - val_loss: 0.9141 - val_acc: 0.6838\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4276 - acc: 0.8429 - val_loss: 0.3142 - val_acc: 0.8675\n",
            "Epoch 10/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4163 - acc: 0.8467 - val_loss: 0.3792 - val_acc: 0.8632\n",
            "Epoch 11/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4096 - acc: 0.8529 - val_loss: 0.3406 - val_acc: 0.8632\n",
            "Epoch 12/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3831 - acc: 0.8582 - val_loss: 0.3234 - val_acc: 0.8889\n",
            "Epoch 13/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3785 - acc: 0.8610 - val_loss: 0.3675 - val_acc: 0.8675\n",
            "Epoch 14/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3867 - acc: 0.8672 - val_loss: 0.7018 - val_acc: 0.7009\n",
            "Epoch 15/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3783 - acc: 0.8648 - val_loss: 0.4349 - val_acc: 0.8504\n",
            "Epoch 16/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3397 - acc: 0.8801 - val_loss: 0.5064 - val_acc: 0.8419\n",
            "Epoch 17/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3449 - acc: 0.8729 - val_loss: 0.6134 - val_acc: 0.7949\n",
            "Epoch 18/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3278 - acc: 0.8786 - val_loss: 0.6098 - val_acc: 0.7863\n",
            "Epoch 19/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3016 - acc: 0.8920 - val_loss: 0.3507 - val_acc: 0.8675\n",
            "Epoch 20/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3262 - acc: 0.8782 - val_loss: 0.3396 - val_acc: 0.8803\n",
            "Epoch 21/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2766 - acc: 0.8953 - val_loss: 0.4235 - val_acc: 0.8419\n",
            "Epoch 22/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2671 - acc: 0.9081 - val_loss: 0.3898 - val_acc: 0.8419\n",
            "Epoch 23/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2856 - acc: 0.8943 - val_loss: 0.5173 - val_acc: 0.8120\n",
            "Epoch 24/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2523 - acc: 0.9081 - val_loss: 0.3902 - val_acc: 0.8718\n",
            "Epoch 25/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2661 - acc: 0.9020 - val_loss: 0.4074 - val_acc: 0.8504\n",
            "Epoch 26/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2342 - acc: 0.9139 - val_loss: 0.4988 - val_acc: 0.8547\n",
            "Epoch 27/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2575 - acc: 0.9105 - val_loss: 0.3943 - val_acc: 0.8291\n",
            "Epoch 28/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2351 - acc: 0.9129 - val_loss: 0.3507 - val_acc: 0.9017\n",
            "Epoch 29/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1936 - acc: 0.9296 - val_loss: 0.6754 - val_acc: 0.7906\n",
            "Epoch 30/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2183 - acc: 0.9167 - val_loss: 0.4478 - val_acc: 0.8718\n",
            "Epoch 31/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2076 - acc: 0.9253 - val_loss: 0.4183 - val_acc: 0.8974\n",
            "Epoch 32/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2232 - acc: 0.9134 - val_loss: 0.3576 - val_acc: 0.8462\n",
            "Epoch 33/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2055 - acc: 0.9262 - val_loss: 0.4651 - val_acc: 0.8291\n",
            "Epoch 34/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2066 - acc: 0.9305 - val_loss: 0.4345 - val_acc: 0.8846\n",
            "Epoch 35/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1865 - acc: 0.9334 - val_loss: 0.5139 - val_acc: 0.8419\n",
            "Epoch 36/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1747 - acc: 0.9353 - val_loss: 0.4387 - val_acc: 0.8761\n",
            "Epoch 37/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2153 - acc: 0.9238 - val_loss: 0.5950 - val_acc: 0.8462\n",
            "Epoch 38/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1760 - acc: 0.9415 - val_loss: 0.7461 - val_acc: 0.7906\n",
            "Epoch 39/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1910 - acc: 0.9315 - val_loss: 0.4119 - val_acc: 0.8632\n",
            "Epoch 40/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1431 - acc: 0.9491 - val_loss: 0.7301 - val_acc: 0.7949\n",
            "Epoch 41/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1512 - acc: 0.9443 - val_loss: 0.6097 - val_acc: 0.8291\n",
            "Epoch 42/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1811 - acc: 0.9329 - val_loss: 0.4225 - val_acc: 0.8846\n",
            "Epoch 43/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1332 - acc: 0.9519 - val_loss: 0.4379 - val_acc: 0.8547\n",
            "Epoch 44/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1504 - acc: 0.9443 - val_loss: 0.4931 - val_acc: 0.8675\n",
            "Epoch 45/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1912 - acc: 0.9315 - val_loss: 0.6448 - val_acc: 0.8419\n",
            "Epoch 46/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1486 - acc: 0.9472 - val_loss: 0.6054 - val_acc: 0.8547\n",
            "Epoch 47/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1644 - acc: 0.9438 - val_loss: 0.5102 - val_acc: 0.8590\n",
            "Epoch 48/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1464 - acc: 0.9448 - val_loss: 0.4204 - val_acc: 0.8803\n",
            "Epoch 49/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1422 - acc: 0.9453 - val_loss: 0.4717 - val_acc: 0.8675\n",
            "Epoch 50/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1247 - acc: 0.9538 - val_loss: 0.5323 - val_acc: 0.8504\n",
            "Epoch 51/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1407 - acc: 0.9524 - val_loss: 0.5041 - val_acc: 0.8504\n",
            "Epoch 52/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1269 - acc: 0.9529 - val_loss: 0.5392 - val_acc: 0.8590\n",
            "Epoch 53/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1208 - acc: 0.9557 - val_loss: 0.6201 - val_acc: 0.8675\n",
            "Epoch 54/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1328 - acc: 0.9562 - val_loss: 0.6319 - val_acc: 0.8504\n",
            "Epoch 55/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1318 - acc: 0.9515 - val_loss: 0.4981 - val_acc: 0.8761\n",
            "Epoch 56/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1096 - acc: 0.9634 - val_loss: 0.5727 - val_acc: 0.8761\n",
            "Epoch 57/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1085 - acc: 0.9605 - val_loss: 0.6209 - val_acc: 0.8333\n",
            "Epoch 58/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1110 - acc: 0.9600 - val_loss: 0.6580 - val_acc: 0.8248\n",
            "Epoch 59/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1191 - acc: 0.9600 - val_loss: 0.7125 - val_acc: 0.8034\n",
            "Epoch 60/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1068 - acc: 0.9643 - val_loss: 0.6527 - val_acc: 0.8547\n",
            "Epoch 61/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1102 - acc: 0.9619 - val_loss: 0.6009 - val_acc: 0.8761\n",
            "Epoch 62/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1267 - acc: 0.9567 - val_loss: 0.7112 - val_acc: 0.8547\n",
            "Epoch 63/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1215 - acc: 0.9619 - val_loss: 0.4244 - val_acc: 0.8803\n",
            "Epoch 64/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1268 - acc: 0.9553 - val_loss: 0.4445 - val_acc: 0.8761\n",
            "Epoch 65/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1105 - acc: 0.9648 - val_loss: 0.5031 - val_acc: 0.8932\n",
            "Epoch 66/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1026 - acc: 0.9695 - val_loss: 0.5953 - val_acc: 0.8761\n",
            "Epoch 67/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1307 - acc: 0.9543 - val_loss: 0.5792 - val_acc: 0.8504\n",
            "Epoch 68/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0841 - acc: 0.9714 - val_loss: 1.3351 - val_acc: 0.8077\n",
            "Epoch 69/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1005 - acc: 0.9629 - val_loss: 0.5363 - val_acc: 0.8761\n",
            "Epoch 70/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1021 - acc: 0.9695 - val_loss: 0.5271 - val_acc: 0.8803\n",
            "Epoch 71/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0940 - acc: 0.9634 - val_loss: 0.9340 - val_acc: 0.8205\n",
            "Epoch 72/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1033 - acc: 0.9614 - val_loss: 0.6341 - val_acc: 0.8547\n",
            "Epoch 73/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1113 - acc: 0.9648 - val_loss: 0.7011 - val_acc: 0.8419\n",
            "Epoch 74/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1399 - acc: 0.9534 - val_loss: 0.6085 - val_acc: 0.8718\n",
            "Epoch 75/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0881 - acc: 0.9686 - val_loss: 0.6042 - val_acc: 0.8718\n",
            "Epoch 76/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0712 - acc: 0.9738 - val_loss: 0.6418 - val_acc: 0.8504\n",
            "Epoch 77/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1138 - acc: 0.9605 - val_loss: 0.6422 - val_acc: 0.8376\n",
            "Epoch 78/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1062 - acc: 0.9657 - val_loss: 0.5503 - val_acc: 0.8205\n",
            "Epoch 79/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0656 - acc: 0.9767 - val_loss: 0.9498 - val_acc: 0.8462\n",
            "Epoch 80/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0870 - acc: 0.9710 - val_loss: 0.6088 - val_acc: 0.8376\n",
            "Epoch 81/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0931 - acc: 0.9686 - val_loss: 0.6328 - val_acc: 0.8590\n",
            "Epoch 82/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0948 - acc: 0.9676 - val_loss: 0.9853 - val_acc: 0.8248\n",
            "Epoch 83/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0945 - acc: 0.9662 - val_loss: 0.5983 - val_acc: 0.8632\n",
            "Epoch 84/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0685 - acc: 0.9791 - val_loss: 0.6509 - val_acc: 0.8504\n",
            "Epoch 85/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0903 - acc: 0.9653 - val_loss: 0.6116 - val_acc: 0.8761\n",
            "Epoch 86/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0723 - acc: 0.9772 - val_loss: 0.7363 - val_acc: 0.8205\n",
            "Epoch 87/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1048 - acc: 0.9605 - val_loss: 0.5757 - val_acc: 0.8632\n",
            "Epoch 88/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0935 - acc: 0.9705 - val_loss: 0.6322 - val_acc: 0.8419\n",
            "Epoch 89/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0603 - acc: 0.9829 - val_loss: 0.6811 - val_acc: 0.8504\n",
            "Epoch 90/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1091 - acc: 0.9643 - val_loss: 0.6928 - val_acc: 0.8504\n",
            "Epoch 91/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0989 - acc: 0.9667 - val_loss: 0.4481 - val_acc: 0.8889\n",
            "Epoch 92/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0706 - acc: 0.9724 - val_loss: 0.7968 - val_acc: 0.8675\n",
            "Epoch 93/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0636 - acc: 0.9786 - val_loss: 0.7281 - val_acc: 0.8632\n",
            "Epoch 94/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0755 - acc: 0.9757 - val_loss: 0.5839 - val_acc: 0.8632\n",
            "Epoch 95/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0632 - acc: 0.9805 - val_loss: 0.6083 - val_acc: 0.8675\n",
            "Epoch 96/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1239 - acc: 0.9676 - val_loss: 0.6144 - val_acc: 0.8846\n",
            "Epoch 97/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0738 - acc: 0.9752 - val_loss: 0.6981 - val_acc: 0.8632\n",
            "Epoch 98/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0692 - acc: 0.9733 - val_loss: 0.7753 - val_acc: 0.8632\n",
            "Epoch 99/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0819 - acc: 0.9738 - val_loss: 0.5532 - val_acc: 0.8504\n",
            "Epoch 100/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1126 - acc: 0.9629 - val_loss: 0.5930 - val_acc: 0.8504\n",
            "32 Fold ACC of CNN = 0.9017094017094017\n",
            "\n",
            "13 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.8049 - acc: 0.6730 - val_loss: 0.9863 - val_acc: 0.6795\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.5774 - acc: 0.7872 - val_loss: 0.4245 - val_acc: 0.8419\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.5491 - acc: 0.7996 - val_loss: 0.6141 - val_acc: 0.7778\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4921 - acc: 0.8172 - val_loss: 0.6581 - val_acc: 0.7521\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4652 - acc: 0.8234 - val_loss: 0.4049 - val_acc: 0.8333\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4593 - acc: 0.8363 - val_loss: 0.3297 - val_acc: 0.8761\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4259 - acc: 0.8444 - val_loss: 0.3895 - val_acc: 0.8462\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4314 - acc: 0.8448 - val_loss: 0.4330 - val_acc: 0.8504\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4164 - acc: 0.8463 - val_loss: 0.4838 - val_acc: 0.8376\n",
            "Epoch 10/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4017 - acc: 0.8544 - val_loss: 0.4239 - val_acc: 0.8333\n",
            "Epoch 11/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3771 - acc: 0.8629 - val_loss: 0.4558 - val_acc: 0.8376\n",
            "Epoch 12/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3756 - acc: 0.8658 - val_loss: 0.2896 - val_acc: 0.9060\n",
            "Epoch 13/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3684 - acc: 0.8729 - val_loss: 0.4923 - val_acc: 0.8504\n",
            "Epoch 14/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3799 - acc: 0.8672 - val_loss: 0.3805 - val_acc: 0.8718\n",
            "Epoch 15/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3622 - acc: 0.8667 - val_loss: 0.3640 - val_acc: 0.8761\n",
            "Epoch 16/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3438 - acc: 0.8777 - val_loss: 0.3776 - val_acc: 0.8547\n",
            "Epoch 17/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3501 - acc: 0.8715 - val_loss: 0.3474 - val_acc: 0.8675\n",
            "Epoch 18/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3346 - acc: 0.8820 - val_loss: 0.3546 - val_acc: 0.8761\n",
            "Epoch 19/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3483 - acc: 0.8696 - val_loss: 0.5254 - val_acc: 0.7991\n",
            "Epoch 20/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3296 - acc: 0.8715 - val_loss: 0.3983 - val_acc: 0.8547\n",
            "Epoch 21/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3090 - acc: 0.8958 - val_loss: 0.3850 - val_acc: 0.8547\n",
            "Epoch 22/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2903 - acc: 0.8877 - val_loss: 0.3695 - val_acc: 0.8803\n",
            "Epoch 23/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2920 - acc: 0.8953 - val_loss: 0.4947 - val_acc: 0.8077\n",
            "Epoch 24/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2578 - acc: 0.9024 - val_loss: 0.6268 - val_acc: 0.8034\n",
            "Epoch 25/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2856 - acc: 0.8881 - val_loss: 0.3999 - val_acc: 0.8504\n",
            "Epoch 26/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2765 - acc: 0.8996 - val_loss: 0.3697 - val_acc: 0.8761\n",
            "Epoch 27/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2570 - acc: 0.9077 - val_loss: 0.4409 - val_acc: 0.8675\n",
            "Epoch 28/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2291 - acc: 0.9129 - val_loss: 0.6663 - val_acc: 0.8120\n",
            "Epoch 29/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2614 - acc: 0.8991 - val_loss: 0.4047 - val_acc: 0.8590\n",
            "Epoch 30/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2481 - acc: 0.9086 - val_loss: 0.3445 - val_acc: 0.8590\n",
            "Epoch 31/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2106 - acc: 0.9281 - val_loss: 0.6259 - val_acc: 0.8205\n",
            "Epoch 32/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2291 - acc: 0.9139 - val_loss: 0.8146 - val_acc: 0.7821\n",
            "Epoch 33/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2254 - acc: 0.9191 - val_loss: 0.5180 - val_acc: 0.8376\n",
            "Epoch 34/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1776 - acc: 0.9329 - val_loss: 0.4912 - val_acc: 0.8632\n",
            "Epoch 35/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2404 - acc: 0.9100 - val_loss: 0.4239 - val_acc: 0.8419\n",
            "Epoch 36/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2160 - acc: 0.9215 - val_loss: 0.7098 - val_acc: 0.8077\n",
            "Epoch 37/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1739 - acc: 0.9291 - val_loss: 0.6019 - val_acc: 0.8333\n",
            "Epoch 38/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2133 - acc: 0.9196 - val_loss: 0.4521 - val_acc: 0.8419\n",
            "Epoch 39/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1726 - acc: 0.9343 - val_loss: 0.5212 - val_acc: 0.8462\n",
            "Epoch 40/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1609 - acc: 0.9429 - val_loss: 0.6379 - val_acc: 0.8077\n",
            "Epoch 41/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1974 - acc: 0.9248 - val_loss: 0.5369 - val_acc: 0.8419\n",
            "Epoch 42/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1941 - acc: 0.9300 - val_loss: 0.5674 - val_acc: 0.8333\n",
            "Epoch 43/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1901 - acc: 0.9315 - val_loss: 1.3502 - val_acc: 0.7051\n",
            "Epoch 44/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1510 - acc: 0.9453 - val_loss: 0.7370 - val_acc: 0.7650\n",
            "Epoch 45/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1603 - acc: 0.9443 - val_loss: 0.6573 - val_acc: 0.8120\n",
            "Epoch 46/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1662 - acc: 0.9419 - val_loss: 0.7834 - val_acc: 0.8077\n",
            "Epoch 47/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1789 - acc: 0.9343 - val_loss: 0.6539 - val_acc: 0.8291\n",
            "Epoch 48/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1437 - acc: 0.9443 - val_loss: 0.5497 - val_acc: 0.8205\n",
            "Epoch 49/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1514 - acc: 0.9524 - val_loss: 0.6692 - val_acc: 0.8376\n",
            "Epoch 50/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1460 - acc: 0.9491 - val_loss: 0.6313 - val_acc: 0.8291\n",
            "Epoch 51/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1718 - acc: 0.9386 - val_loss: 0.7413 - val_acc: 0.7991\n",
            "Epoch 52/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1370 - acc: 0.9510 - val_loss: 0.7762 - val_acc: 0.8248\n",
            "Epoch 53/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1487 - acc: 0.9434 - val_loss: 0.4928 - val_acc: 0.8376\n",
            "Epoch 54/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1134 - acc: 0.9634 - val_loss: 0.4557 - val_acc: 0.8462\n",
            "Epoch 55/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1307 - acc: 0.9534 - val_loss: 0.5168 - val_acc: 0.8718\n",
            "Epoch 56/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1749 - acc: 0.9443 - val_loss: 0.5997 - val_acc: 0.8248\n",
            "Epoch 57/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1522 - acc: 0.9453 - val_loss: 0.5177 - val_acc: 0.8248\n",
            "Epoch 58/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1291 - acc: 0.9500 - val_loss: 0.5089 - val_acc: 0.8419\n",
            "Epoch 59/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1079 - acc: 0.9610 - val_loss: 0.5974 - val_acc: 0.8333\n",
            "Epoch 60/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1525 - acc: 0.9495 - val_loss: 0.6562 - val_acc: 0.7650\n",
            "Epoch 61/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1268 - acc: 0.9553 - val_loss: 0.6390 - val_acc: 0.8632\n",
            "Epoch 62/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1263 - acc: 0.9534 - val_loss: 0.5526 - val_acc: 0.8632\n",
            "Epoch 63/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1295 - acc: 0.9534 - val_loss: 0.7492 - val_acc: 0.8205\n",
            "Epoch 64/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0969 - acc: 0.9605 - val_loss: 1.3419 - val_acc: 0.7179\n",
            "Epoch 65/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1183 - acc: 0.9581 - val_loss: 0.6870 - val_acc: 0.8120\n",
            "Epoch 66/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1283 - acc: 0.9548 - val_loss: 0.6111 - val_acc: 0.8248\n",
            "Epoch 67/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1052 - acc: 0.9634 - val_loss: 0.5808 - val_acc: 0.8632\n",
            "Epoch 68/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0998 - acc: 0.9686 - val_loss: 0.6392 - val_acc: 0.8462\n",
            "Epoch 69/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0718 - acc: 0.9738 - val_loss: 0.7272 - val_acc: 0.8376\n",
            "Epoch 70/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1390 - acc: 0.9515 - val_loss: 0.5602 - val_acc: 0.8590\n",
            "Epoch 71/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0987 - acc: 0.9610 - val_loss: 0.7503 - val_acc: 0.8419\n",
            "Epoch 72/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1110 - acc: 0.9600 - val_loss: 0.5736 - val_acc: 0.8504\n",
            "Epoch 73/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0919 - acc: 0.9710 - val_loss: 0.6368 - val_acc: 0.8419\n",
            "Epoch 74/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1455 - acc: 0.9462 - val_loss: 0.7135 - val_acc: 0.8376\n",
            "Epoch 75/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1065 - acc: 0.9619 - val_loss: 0.5846 - val_acc: 0.8504\n",
            "Epoch 76/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1097 - acc: 0.9586 - val_loss: 0.6640 - val_acc: 0.8291\n",
            "Epoch 77/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0858 - acc: 0.9719 - val_loss: 0.6584 - val_acc: 0.8205\n",
            "Epoch 78/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1001 - acc: 0.9672 - val_loss: 0.6774 - val_acc: 0.8504\n",
            "Epoch 79/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0973 - acc: 0.9657 - val_loss: 0.5582 - val_acc: 0.8718\n",
            "Epoch 80/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1127 - acc: 0.9619 - val_loss: 0.8910 - val_acc: 0.7863\n",
            "Epoch 81/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0914 - acc: 0.9681 - val_loss: 0.7056 - val_acc: 0.8419\n",
            "Epoch 82/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0924 - acc: 0.9691 - val_loss: 0.8972 - val_acc: 0.7906\n",
            "Epoch 83/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1259 - acc: 0.9586 - val_loss: 0.6753 - val_acc: 0.8291\n",
            "Epoch 84/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1334 - acc: 0.9562 - val_loss: 0.6375 - val_acc: 0.8162\n",
            "Epoch 85/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0925 - acc: 0.9691 - val_loss: 0.8011 - val_acc: 0.8248\n",
            "Epoch 86/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0628 - acc: 0.9776 - val_loss: 0.6440 - val_acc: 0.8419\n",
            "Epoch 87/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0844 - acc: 0.9691 - val_loss: 0.7508 - val_acc: 0.7821\n",
            "Epoch 88/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1131 - acc: 0.9657 - val_loss: 0.6972 - val_acc: 0.8205\n",
            "Epoch 89/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1124 - acc: 0.9600 - val_loss: 0.6621 - val_acc: 0.8205\n",
            "Epoch 90/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1108 - acc: 0.9624 - val_loss: 0.8537 - val_acc: 0.8120\n",
            "Epoch 91/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0846 - acc: 0.9695 - val_loss: 0.8247 - val_acc: 0.8034\n",
            "Epoch 92/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0914 - acc: 0.9672 - val_loss: 1.0321 - val_acc: 0.8034\n",
            "Epoch 93/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1124 - acc: 0.9605 - val_loss: 0.6948 - val_acc: 0.8120\n",
            "Epoch 94/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0837 - acc: 0.9743 - val_loss: 0.7617 - val_acc: 0.8034\n",
            "Epoch 95/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0748 - acc: 0.9705 - val_loss: 0.9434 - val_acc: 0.8077\n",
            "Epoch 96/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0925 - acc: 0.9691 - val_loss: 0.9391 - val_acc: 0.8034\n",
            "Epoch 97/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1028 - acc: 0.9691 - val_loss: 0.8460 - val_acc: 0.7991\n",
            "Epoch 98/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0725 - acc: 0.9729 - val_loss: 0.9260 - val_acc: 0.8120\n",
            "Epoch 99/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0965 - acc: 0.9667 - val_loss: 0.8187 - val_acc: 0.8291\n",
            "Epoch 100/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0700 - acc: 0.9776 - val_loss: 0.8950 - val_acc: 0.8034\n",
            "33 Fold ACC of CNN = 0.905982905982906\n",
            "\n",
            "14 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 3s 7ms/step - loss: 0.8353 - acc: 0.6525 - val_loss: 0.5596 - val_acc: 0.8077\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.5691 - acc: 0.7925 - val_loss: 0.6230 - val_acc: 0.7564\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.5137 - acc: 0.8125 - val_loss: 0.5694 - val_acc: 0.8248\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4844 - acc: 0.8229 - val_loss: 0.5463 - val_acc: 0.7991\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4870 - acc: 0.8291 - val_loss: 0.4167 - val_acc: 0.8333\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4423 - acc: 0.8425 - val_loss: 0.4399 - val_acc: 0.8547\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4314 - acc: 0.8372 - val_loss: 0.3981 - val_acc: 0.8718\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4336 - acc: 0.8444 - val_loss: 0.4667 - val_acc: 0.8291\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4013 - acc: 0.8472 - val_loss: 0.4664 - val_acc: 0.8120\n",
            "Epoch 10/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4271 - acc: 0.8386 - val_loss: 0.5522 - val_acc: 0.8077\n",
            "Epoch 11/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.4125 - acc: 0.8548 - val_loss: 0.4888 - val_acc: 0.8205\n",
            "Epoch 12/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.3361 - acc: 0.8710 - val_loss: 0.7229 - val_acc: 0.7350\n",
            "Epoch 13/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3671 - acc: 0.8720 - val_loss: 0.4234 - val_acc: 0.8761\n",
            "Epoch 14/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.3261 - acc: 0.8829 - val_loss: 0.4671 - val_acc: 0.8632\n",
            "Epoch 15/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3351 - acc: 0.8801 - val_loss: 0.3684 - val_acc: 0.8803\n",
            "Epoch 16/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3182 - acc: 0.8824 - val_loss: 0.4133 - val_acc: 0.8632\n",
            "Epoch 17/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3075 - acc: 0.8867 - val_loss: 0.4837 - val_acc: 0.8162\n",
            "Epoch 18/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2811 - acc: 0.8924 - val_loss: 0.4513 - val_acc: 0.8590\n",
            "Epoch 19/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2741 - acc: 0.9020 - val_loss: 0.4793 - val_acc: 0.8675\n",
            "Epoch 20/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2879 - acc: 0.8843 - val_loss: 0.4328 - val_acc: 0.8718\n",
            "Epoch 21/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2565 - acc: 0.9029 - val_loss: 0.4619 - val_acc: 0.8376\n",
            "Epoch 22/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2758 - acc: 0.9015 - val_loss: 0.4243 - val_acc: 0.8547\n",
            "Epoch 23/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2410 - acc: 0.9091 - val_loss: 0.6809 - val_acc: 0.8077\n",
            "Epoch 24/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2371 - acc: 0.9158 - val_loss: 0.5065 - val_acc: 0.8547\n",
            "Epoch 25/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2291 - acc: 0.9210 - val_loss: 0.5155 - val_acc: 0.8632\n",
            "Epoch 26/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2105 - acc: 0.9248 - val_loss: 0.6821 - val_acc: 0.8205\n",
            "Epoch 27/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.2241 - acc: 0.9191 - val_loss: 0.4472 - val_acc: 0.8590\n",
            "Epoch 28/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2111 - acc: 0.9234 - val_loss: 0.5908 - val_acc: 0.8248\n",
            "Epoch 29/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2145 - acc: 0.9281 - val_loss: 0.5236 - val_acc: 0.8590\n",
            "Epoch 30/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1868 - acc: 0.9300 - val_loss: 0.5997 - val_acc: 0.8419\n",
            "Epoch 31/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1881 - acc: 0.9310 - val_loss: 0.5920 - val_acc: 0.8376\n",
            "Epoch 32/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1989 - acc: 0.9257 - val_loss: 0.6379 - val_acc: 0.8547\n",
            "Epoch 33/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1898 - acc: 0.9343 - val_loss: 0.6399 - val_acc: 0.8376\n",
            "Epoch 34/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1862 - acc: 0.9305 - val_loss: 0.6553 - val_acc: 0.8462\n",
            "Epoch 35/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1743 - acc: 0.9334 - val_loss: 0.8361 - val_acc: 0.8248\n",
            "Epoch 36/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1789 - acc: 0.9248 - val_loss: 0.5465 - val_acc: 0.8291\n",
            "Epoch 37/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1468 - acc: 0.9467 - val_loss: 0.4954 - val_acc: 0.8419\n",
            "Epoch 38/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1674 - acc: 0.9424 - val_loss: 0.7615 - val_acc: 0.8034\n",
            "Epoch 39/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1439 - acc: 0.9476 - val_loss: 0.5520 - val_acc: 0.8803\n",
            "Epoch 40/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1637 - acc: 0.9491 - val_loss: 0.7765 - val_acc: 0.8248\n",
            "Epoch 41/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1298 - acc: 0.9529 - val_loss: 0.4573 - val_acc: 0.8675\n",
            "Epoch 42/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1655 - acc: 0.9424 - val_loss: 0.7538 - val_acc: 0.8376\n",
            "Epoch 43/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1401 - acc: 0.9476 - val_loss: 0.8036 - val_acc: 0.8248\n",
            "Epoch 44/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1360 - acc: 0.9505 - val_loss: 0.7174 - val_acc: 0.8291\n",
            "Epoch 45/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1289 - acc: 0.9567 - val_loss: 0.6211 - val_acc: 0.8590\n",
            "Epoch 46/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1422 - acc: 0.9467 - val_loss: 0.5450 - val_acc: 0.8504\n",
            "Epoch 47/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1318 - acc: 0.9534 - val_loss: 0.7017 - val_acc: 0.8632\n",
            "Epoch 48/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1391 - acc: 0.9457 - val_loss: 0.6613 - val_acc: 0.8291\n",
            "Epoch 49/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1192 - acc: 0.9553 - val_loss: 0.7532 - val_acc: 0.8376\n",
            "Epoch 50/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1386 - acc: 0.9495 - val_loss: 0.5035 - val_acc: 0.8376\n",
            "Epoch 51/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1348 - acc: 0.9505 - val_loss: 0.6098 - val_acc: 0.8333\n",
            "Epoch 52/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1195 - acc: 0.9614 - val_loss: 0.6649 - val_acc: 0.8504\n",
            "Epoch 53/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1208 - acc: 0.9576 - val_loss: 0.7910 - val_acc: 0.8034\n",
            "Epoch 54/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1123 - acc: 0.9553 - val_loss: 0.5537 - val_acc: 0.8547\n",
            "Epoch 55/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1180 - acc: 0.9595 - val_loss: 0.6740 - val_acc: 0.8205\n",
            "Epoch 56/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1226 - acc: 0.9581 - val_loss: 0.8032 - val_acc: 0.8034\n",
            "Epoch 57/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1235 - acc: 0.9600 - val_loss: 0.5877 - val_acc: 0.8675\n",
            "Epoch 58/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0976 - acc: 0.9629 - val_loss: 0.6337 - val_acc: 0.8675\n",
            "Epoch 59/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1473 - acc: 0.9500 - val_loss: 0.9123 - val_acc: 0.8077\n",
            "Epoch 60/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1136 - acc: 0.9619 - val_loss: 0.7867 - val_acc: 0.7949\n",
            "Epoch 61/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1109 - acc: 0.9567 - val_loss: 0.6676 - val_acc: 0.8291\n",
            "Epoch 62/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1048 - acc: 0.9643 - val_loss: 0.6741 - val_acc: 0.8248\n",
            "Epoch 63/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0965 - acc: 0.9686 - val_loss: 0.7049 - val_acc: 0.8333\n",
            "Epoch 64/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1320 - acc: 0.9524 - val_loss: 0.6711 - val_acc: 0.8333\n",
            "Epoch 65/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0995 - acc: 0.9662 - val_loss: 0.8740 - val_acc: 0.8120\n",
            "Epoch 66/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1002 - acc: 0.9676 - val_loss: 0.8912 - val_acc: 0.8205\n",
            "Epoch 67/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0724 - acc: 0.9762 - val_loss: 0.7888 - val_acc: 0.8376\n",
            "Epoch 68/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0818 - acc: 0.9691 - val_loss: 0.8626 - val_acc: 0.8333\n",
            "Epoch 69/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0931 - acc: 0.9686 - val_loss: 0.9264 - val_acc: 0.7949\n",
            "Epoch 70/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1096 - acc: 0.9624 - val_loss: 1.0753 - val_acc: 0.8120\n",
            "Epoch 71/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1096 - acc: 0.9614 - val_loss: 0.8388 - val_acc: 0.8248\n",
            "Epoch 72/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1206 - acc: 0.9614 - val_loss: 0.8271 - val_acc: 0.8248\n",
            "Epoch 73/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0969 - acc: 0.9695 - val_loss: 0.7743 - val_acc: 0.8034\n",
            "Epoch 74/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1131 - acc: 0.9576 - val_loss: 0.6710 - val_acc: 0.8162\n",
            "Epoch 75/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0591 - acc: 0.9795 - val_loss: 0.7567 - val_acc: 0.8376\n",
            "Epoch 76/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0796 - acc: 0.9719 - val_loss: 0.8381 - val_acc: 0.8504\n",
            "Epoch 77/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0502 - acc: 0.9833 - val_loss: 0.7367 - val_acc: 0.8761\n",
            "Epoch 78/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0816 - acc: 0.9714 - val_loss: 1.0988 - val_acc: 0.8034\n",
            "Epoch 79/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1299 - acc: 0.9619 - val_loss: 0.7992 - val_acc: 0.8248\n",
            "Epoch 80/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0789 - acc: 0.9748 - val_loss: 0.8410 - val_acc: 0.8462\n",
            "Epoch 81/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1052 - acc: 0.9614 - val_loss: 0.7656 - val_acc: 0.8590\n",
            "Epoch 82/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0651 - acc: 0.9767 - val_loss: 0.7553 - val_acc: 0.8504\n",
            "Epoch 83/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0852 - acc: 0.9676 - val_loss: 0.7418 - val_acc: 0.8547\n",
            "Epoch 84/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0937 - acc: 0.9662 - val_loss: 0.8728 - val_acc: 0.8504\n",
            "Epoch 85/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0836 - acc: 0.9710 - val_loss: 0.8562 - val_acc: 0.8077\n",
            "Epoch 86/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0867 - acc: 0.9757 - val_loss: 0.8090 - val_acc: 0.8291\n",
            "Epoch 87/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0692 - acc: 0.9800 - val_loss: 0.9867 - val_acc: 0.8291\n",
            "Epoch 88/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0587 - acc: 0.9819 - val_loss: 0.8929 - val_acc: 0.8504\n",
            "Epoch 89/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1146 - acc: 0.9686 - val_loss: 0.7713 - val_acc: 0.8419\n",
            "Epoch 90/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0788 - acc: 0.9719 - val_loss: 0.7946 - val_acc: 0.7991\n",
            "Epoch 91/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0829 - acc: 0.9710 - val_loss: 0.8495 - val_acc: 0.7991\n",
            "Epoch 92/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0831 - acc: 0.9729 - val_loss: 0.7997 - val_acc: 0.8248\n",
            "Epoch 93/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0590 - acc: 0.9810 - val_loss: 0.9248 - val_acc: 0.8504\n",
            "Epoch 94/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0693 - acc: 0.9762 - val_loss: 0.9803 - val_acc: 0.8333\n",
            "Epoch 95/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0842 - acc: 0.9733 - val_loss: 0.9153 - val_acc: 0.8333\n",
            "Epoch 96/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0740 - acc: 0.9752 - val_loss: 0.8481 - val_acc: 0.8632\n",
            "Epoch 97/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1056 - acc: 0.9695 - val_loss: 0.8768 - val_acc: 0.8120\n",
            "34 Fold ACC of CNN = 0.8803418803418803\n",
            "\n",
            "15 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 3s 7ms/step - loss: 0.7769 - acc: 0.6884 - val_loss: 1.0438 - val_acc: 0.6695\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.5812 - acc: 0.7916 - val_loss: 0.4154 - val_acc: 0.8240\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.5035 - acc: 0.8064 - val_loss: 0.4449 - val_acc: 0.8155\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4839 - acc: 0.8206 - val_loss: 0.8881 - val_acc: 0.6953\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4681 - acc: 0.8292 - val_loss: 0.5660 - val_acc: 0.8026\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4573 - acc: 0.8373 - val_loss: 0.4861 - val_acc: 0.8155\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4542 - acc: 0.8368 - val_loss: 0.6110 - val_acc: 0.7811\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4266 - acc: 0.8440 - val_loss: 0.4599 - val_acc: 0.8369\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4044 - acc: 0.8520 - val_loss: 0.3851 - val_acc: 0.8584\n",
            "Epoch 10/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3970 - acc: 0.8573 - val_loss: 0.6752 - val_acc: 0.7511\n",
            "Epoch 11/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3550 - acc: 0.8725 - val_loss: 0.4737 - val_acc: 0.8283\n",
            "Epoch 12/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3534 - acc: 0.8720 - val_loss: 0.5159 - val_acc: 0.8197\n",
            "Epoch 13/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.3740 - acc: 0.8635 - val_loss: 0.4407 - val_acc: 0.8155\n",
            "Epoch 14/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.3574 - acc: 0.8644 - val_loss: 0.5328 - val_acc: 0.7983\n",
            "Epoch 15/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3253 - acc: 0.8787 - val_loss: 0.4351 - val_acc: 0.8412\n",
            "Epoch 16/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.3200 - acc: 0.8853 - val_loss: 0.5824 - val_acc: 0.8283\n",
            "Epoch 17/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.3113 - acc: 0.8796 - val_loss: 0.5740 - val_acc: 0.8412\n",
            "Epoch 18/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.3019 - acc: 0.8920 - val_loss: 0.5675 - val_acc: 0.7897\n",
            "Epoch 19/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2915 - acc: 0.8982 - val_loss: 0.5366 - val_acc: 0.8197\n",
            "Epoch 20/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2904 - acc: 0.9077 - val_loss: 0.5464 - val_acc: 0.8283\n",
            "Epoch 21/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2705 - acc: 0.9082 - val_loss: 0.5860 - val_acc: 0.8326\n",
            "Epoch 22/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2526 - acc: 0.9053 - val_loss: 0.5473 - val_acc: 0.8369\n",
            "Epoch 23/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2583 - acc: 0.9015 - val_loss: 0.6812 - val_acc: 0.8112\n",
            "Epoch 24/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2610 - acc: 0.9015 - val_loss: 0.5252 - val_acc: 0.8155\n",
            "Epoch 25/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2320 - acc: 0.9191 - val_loss: 0.7150 - val_acc: 0.8197\n",
            "Epoch 26/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2177 - acc: 0.9206 - val_loss: 0.6397 - val_acc: 0.8240\n",
            "Epoch 27/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2160 - acc: 0.9182 - val_loss: 0.5674 - val_acc: 0.8112\n",
            "Epoch 28/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.2194 - acc: 0.9239 - val_loss: 0.6768 - val_acc: 0.7983\n",
            "Epoch 29/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1827 - acc: 0.9305 - val_loss: 0.6824 - val_acc: 0.8155\n",
            "Epoch 30/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.2225 - acc: 0.9201 - val_loss: 0.6132 - val_acc: 0.8455\n",
            "Epoch 31/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1687 - acc: 0.9405 - val_loss: 0.7420 - val_acc: 0.8240\n",
            "Epoch 32/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1870 - acc: 0.9348 - val_loss: 0.8029 - val_acc: 0.7940\n",
            "Epoch 33/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1662 - acc: 0.9415 - val_loss: 0.6501 - val_acc: 0.8455\n",
            "Epoch 34/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1818 - acc: 0.9329 - val_loss: 0.7303 - val_acc: 0.8112\n",
            "Epoch 35/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1582 - acc: 0.9401 - val_loss: 0.7280 - val_acc: 0.8240\n",
            "Epoch 36/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1615 - acc: 0.9424 - val_loss: 0.6734 - val_acc: 0.8326\n",
            "Epoch 37/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1575 - acc: 0.9434 - val_loss: 0.8344 - val_acc: 0.8069\n",
            "Epoch 38/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1802 - acc: 0.9363 - val_loss: 0.6913 - val_acc: 0.8240\n",
            "Epoch 39/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1580 - acc: 0.9401 - val_loss: 0.7810 - val_acc: 0.8326\n",
            "Epoch 40/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1520 - acc: 0.9472 - val_loss: 0.7471 - val_acc: 0.7983\n",
            "Epoch 41/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1536 - acc: 0.9396 - val_loss: 0.5964 - val_acc: 0.8369\n",
            "Epoch 42/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1212 - acc: 0.9562 - val_loss: 0.8073 - val_acc: 0.8240\n",
            "Epoch 43/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1564 - acc: 0.9505 - val_loss: 0.9211 - val_acc: 0.8112\n",
            "Epoch 44/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1179 - acc: 0.9596 - val_loss: 0.8462 - val_acc: 0.7940\n",
            "Epoch 45/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1513 - acc: 0.9491 - val_loss: 1.1028 - val_acc: 0.8069\n",
            "Epoch 46/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1264 - acc: 0.9553 - val_loss: 0.8658 - val_acc: 0.8240\n",
            "Epoch 47/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1168 - acc: 0.9600 - val_loss: 0.9070 - val_acc: 0.8069\n",
            "Epoch 48/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1291 - acc: 0.9558 - val_loss: 0.8243 - val_acc: 0.7940\n",
            "Epoch 49/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1211 - acc: 0.9572 - val_loss: 0.9341 - val_acc: 0.7811\n",
            "Epoch 50/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1283 - acc: 0.9558 - val_loss: 0.7607 - val_acc: 0.8197\n",
            "Epoch 51/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1106 - acc: 0.9619 - val_loss: 0.7232 - val_acc: 0.8155\n",
            "Epoch 52/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1512 - acc: 0.9515 - val_loss: 0.8250 - val_acc: 0.7639\n",
            "Epoch 53/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0778 - acc: 0.9715 - val_loss: 1.0299 - val_acc: 0.7983\n",
            "Epoch 54/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1234 - acc: 0.9581 - val_loss: 0.8649 - val_acc: 0.8155\n",
            "Epoch 55/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1133 - acc: 0.9638 - val_loss: 0.9009 - val_acc: 0.8112\n",
            "Epoch 56/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1143 - acc: 0.9615 - val_loss: 0.9531 - val_acc: 0.8112\n",
            "Epoch 57/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1357 - acc: 0.9543 - val_loss: 0.8905 - val_acc: 0.8112\n",
            "Epoch 58/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1256 - acc: 0.9515 - val_loss: 0.8135 - val_acc: 0.8283\n",
            "Epoch 59/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1122 - acc: 0.9586 - val_loss: 0.7393 - val_acc: 0.8455\n",
            "Epoch 60/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.1081 - acc: 0.9624 - val_loss: 0.9170 - val_acc: 0.8155\n",
            "Epoch 61/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0814 - acc: 0.9743 - val_loss: 1.0765 - val_acc: 0.8155\n",
            "Epoch 62/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1121 - acc: 0.9619 - val_loss: 0.8732 - val_acc: 0.8240\n",
            "Epoch 63/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1003 - acc: 0.9648 - val_loss: 0.9175 - val_acc: 0.8155\n",
            "Epoch 64/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0715 - acc: 0.9748 - val_loss: 1.0943 - val_acc: 0.8197\n",
            "Epoch 65/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1023 - acc: 0.9638 - val_loss: 0.9611 - val_acc: 0.8069\n",
            "Epoch 66/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1215 - acc: 0.9581 - val_loss: 0.9576 - val_acc: 0.8112\n",
            "Epoch 67/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0870 - acc: 0.9691 - val_loss: 0.9692 - val_acc: 0.8069\n",
            "Epoch 68/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1007 - acc: 0.9662 - val_loss: 0.6736 - val_acc: 0.8369\n",
            "Epoch 69/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.1182 - acc: 0.9586 - val_loss: 1.0356 - val_acc: 0.7897\n",
            "Epoch 70/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0751 - acc: 0.9738 - val_loss: 1.3119 - val_acc: 0.8112\n",
            "Epoch 71/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0802 - acc: 0.9743 - val_loss: 0.8142 - val_acc: 0.8155\n",
            "Epoch 72/100\n",
            "263/263 [==============================] - 1s 5ms/step - loss: 0.0774 - acc: 0.9710 - val_loss: 0.7004 - val_acc: 0.8326\n",
            "Epoch 73/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1060 - acc: 0.9605 - val_loss: 0.9039 - val_acc: 0.7940\n",
            "Epoch 74/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1108 - acc: 0.9648 - val_loss: 0.8206 - val_acc: 0.8240\n",
            "Epoch 75/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0910 - acc: 0.9676 - val_loss: 1.0309 - val_acc: 0.8112\n",
            "Epoch 76/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0848 - acc: 0.9715 - val_loss: 0.9159 - val_acc: 0.7897\n",
            "Epoch 77/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0813 - acc: 0.9734 - val_loss: 0.8895 - val_acc: 0.8026\n",
            "Epoch 78/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0845 - acc: 0.9724 - val_loss: 0.8150 - val_acc: 0.8112\n",
            "Epoch 79/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0654 - acc: 0.9800 - val_loss: 1.0191 - val_acc: 0.7983\n",
            "Epoch 80/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0902 - acc: 0.9681 - val_loss: 1.1532 - val_acc: 0.8026\n",
            "Epoch 81/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0892 - acc: 0.9710 - val_loss: 1.2803 - val_acc: 0.8026\n",
            "Epoch 82/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0791 - acc: 0.9772 - val_loss: 0.8704 - val_acc: 0.7983\n",
            "Epoch 83/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0775 - acc: 0.9729 - val_loss: 0.9929 - val_acc: 0.8197\n",
            "Epoch 84/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0953 - acc: 0.9705 - val_loss: 1.3115 - val_acc: 0.8112\n",
            "Epoch 85/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0775 - acc: 0.9738 - val_loss: 1.1507 - val_acc: 0.7854\n",
            "Epoch 86/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0598 - acc: 0.9833 - val_loss: 1.2537 - val_acc: 0.8026\n",
            "Epoch 87/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0762 - acc: 0.9743 - val_loss: 1.1884 - val_acc: 0.8283\n",
            "Epoch 88/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0742 - acc: 0.9762 - val_loss: 0.9611 - val_acc: 0.8369\n",
            "Epoch 89/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0711 - acc: 0.9734 - val_loss: 1.0477 - val_acc: 0.8326\n",
            "Epoch 90/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0849 - acc: 0.9710 - val_loss: 1.0531 - val_acc: 0.8069\n",
            "Epoch 91/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0718 - acc: 0.9772 - val_loss: 1.1341 - val_acc: 0.8240\n",
            "Epoch 92/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0820 - acc: 0.9686 - val_loss: 0.9824 - val_acc: 0.8112\n",
            "Epoch 93/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.1043 - acc: 0.9676 - val_loss: 0.8393 - val_acc: 0.8369\n",
            "Epoch 94/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0880 - acc: 0.9734 - val_loss: 0.8157 - val_acc: 0.8240\n",
            "Epoch 95/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0839 - acc: 0.9753 - val_loss: 0.8895 - val_acc: 0.8112\n",
            "Epoch 96/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.0486 - acc: 0.9838 - val_loss: 1.0959 - val_acc: 0.8412\n",
            "Epoch 97/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.0582 - acc: 0.9762 - val_loss: 1.1052 - val_acc: 0.8026\n",
            "Epoch 98/100\n",
            "263/263 [==============================] - 3s 10ms/step - loss: 0.0787 - acc: 0.9700 - val_loss: 1.2012 - val_acc: 0.7983\n",
            "Epoch 99/100\n",
            "263/263 [==============================] - 4s 13ms/step - loss: 0.0463 - acc: 0.9833 - val_loss: 1.3009 - val_acc: 0.8112\n",
            "Epoch 100/100\n",
            "263/263 [==============================] - 3s 10ms/step - loss: 0.0630 - acc: 0.9800 - val_loss: 1.4955 - val_acc: 0.7983\n",
            "35 Fold ACC of CNN = 0.8583690987124464\n",
            "\n",
            "16 Fold Training.....\n",
            "Epoch 1/100\n",
            "263/263 [==============================] - 3s 7ms/step - loss: 0.8281 - acc: 0.6670 - val_loss: 0.6991 - val_acc: 0.7339\n",
            "Epoch 2/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.6011 - acc: 0.7878 - val_loss: 0.4321 - val_acc: 0.8670\n",
            "Epoch 3/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.5275 - acc: 0.8049 - val_loss: 0.4550 - val_acc: 0.8412\n",
            "Epoch 4/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.5017 - acc: 0.8192 - val_loss: 0.5160 - val_acc: 0.8283\n",
            "Epoch 5/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4985 - acc: 0.8126 - val_loss: 0.4105 - val_acc: 0.8369\n",
            "Epoch 6/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4720 - acc: 0.8287 - val_loss: 0.5024 - val_acc: 0.8455\n",
            "Epoch 7/100\n",
            "263/263 [==============================] - 1s 6ms/step - loss: 0.4483 - acc: 0.8392 - val_loss: 0.6938 - val_acc: 0.7725\n",
            "Epoch 8/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4322 - acc: 0.8382 - val_loss: 0.4741 - val_acc: 0.8369\n",
            "Epoch 9/100\n",
            "263/263 [==============================] - 2s 6ms/step - loss: 0.4399 - acc: 0.8368 - val_loss: 0.6394 - val_acc: 0.7468\n",
            "Epoch 10/100\n",
            "142/263 [===============>..............] - ETA: 0s - loss: 0.4105 - acc: 0.8486"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-19-c18ead500cf4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     40\u001b[0m     \u001b[0mcnn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'categorical_crossentropy'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptimizer\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mAdam\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.01\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetrics\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'acc'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     41\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 42\u001b[0;31m     \u001b[0mcnn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtr_x\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtr_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mval_x\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval_y\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcallbacks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmc\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     43\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m     \u001b[0;31m### 최고 성능 기록 모델 Load\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1382\u001b[0m                 _r=1):\n\u001b[1;32m   1383\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1384\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1385\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1386\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 915\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    917\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    945\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    946\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 947\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    948\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2955\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   2956\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-> 2957\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   2958\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2959\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1852\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1853\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1854\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1855\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1856\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    502\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    503\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 504\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    505\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    506\u001b[0m           outputs = execute.execute_with_cancellation(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     53\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     54\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 55\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     56\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "np.mean(cnn_acc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QRpqV1JVKTtd",
        "outputId": "140dd975-6d2c-419a-c58d-43de8fb13b8a"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.88435127104655"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "submission['target'] = np.argmax(cnn_pred, axis = 1)"
      ],
      "metadata": {
        "id": "gZtOj4jSKW4J"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "submission.to_csv('12th_acc:0.884.csv', index = False)"
      ],
      "metadata": {
        "id": "mx2dm2LoKZF3"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "submission.target.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_ofDKnKxKdbn",
        "outputId": "b5030958-c2b2-4cbb-a091-1326b397f1d0"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1    2450\n",
              "2    2397\n",
              "3    2272\n",
              "0    2224\n",
              "Name: target, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    }
  ]
}